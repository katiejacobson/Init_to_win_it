!function(){"use strict";class t{constructor(t,e){this._data=t,this._cardSelector=e,this._email=t.email,this._location=t.location,this._desc=t.text,this._link=t.link,this._cardTemplate=e}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".donation-card").cloneNode(!0)}createCard(){return this._cardElement=this._getTemplate(),this._cardEmail=this._cardElement.querySelector(".donation-card__email"),this._cardLocation=this._cardElement.querySelector(".donation-card__location"),this._cardDonation=this._cardElement.querySelector(".donation-card__description"),this._cardImage=this._cardElement.querySelector(".donation-card__image"),this._cardEmail.textContent=`Email: ${this._email}`,this._cardLocation.textContent=`Location: ${this._location}`,this._cardDonation.textContent=`Donation: ${this._desc}`,this._cardImage.src=this._link,this._cardImage.alt=this._desc,this._cardElement}}class e{constructor(t,e){this._renderer=t,this._container=document.querySelector(e)}renderItems(t){t.forEach((t=>{this.addItem(t)}))}addItem(t){const e=this._renderer(t);this._container.prepend(e)}clearItems(){if(this._cards=this._container.querySelectorAll(".charity-card"),null!==this._cards)for(var t=0;t<this._cards.length;t++)this._cards[t].remove()}}class r{constructor(t,e){this._data=t,this._name=t.name,this._profileUrl=t.profileUrl,this._logoUrl=t.logoUrl,this._location=t.location,this._cardSelector=e}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".charity-card").cloneNode(!0)}generateCard(){return this._element=this._getTemplate(),this._element.querySelector(".charity-card__name").textContent=this._name,this._element.querySelector(".charity-card__location").textContent=this._location,this._element.querySelector(".charity-card__url").href=this._profileUrl,this._element}}class s{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e),this._popupCloseButton=this._popupElement.querySelector(".popup__close-button"),this._closeByEscape=t=>{"Escape"===t.key&&this.close()}}open(){this._popupElement.classList.add("donation__popup_opened"),document.addEventListener("keydown",this._closeByEscape)}close(){this._popupElement.classList.remove("donation__popup_opened"),document.removeEventListener("keydown",this._closeByEscape)}setEventListeners(){this._popupElement.addEventListener("click",(t=>{t.target!==this._popupCloseButton&&t.target!==this._popupElement||this.close()}))}}const o=document.querySelector(".donate__button"),i=document.querySelector(".charities__container"),n=new class{constructor(t){let{baseUrl:e,apiKey:r}=t;this._baseUrl=e,this._apiKey=r}_request(t){return fetch(t).then(this.renderResult)}renderResult(t){return t.ok?t.json():Promise.reject(`'Error:' ${t.status}`)}getInfo(t){return fetch(`${this._baseUrl}search/causes=${t}?apiKey=${this._apiKey}`).then(this.renderResult)}}({baseUrl:"https://partners.every.org/v0.2/",apiKey:"pk_live_51295acbffe33d27ac313b33feb97d63"});new class{constructor(t,e){this._formElement=document.querySelector(t),this._form=this._formElement.querySelector(".charities__form"),this._formBtn=this._formElement.querySelector(".charities__button"),this._input=this._formElement.querySelector(".charities__input"),this._handleFormSubmit=e}_getCause(){for(var t,e=document.getElementsByName("cause"),r=0;r<e.length;r++)e[r].checked&&(t=e[r].value);return t}setEventListeners(){this._formBtn.addEventListener("click",(t=>{t.preventDefault();const e=this._getCause();this._handleFormSubmit(e),this._form.reset()}))}}(".charities",(function(t){a.clearItems(),n.getInfo(t).then((t=>{a.renderItems(t.nonprofits),i.classList.add("charities__container_active")})).catch(console.error)})).setEventListeners();const a=new e((function(t){return new r(t,"#charity-card-template").generateCard()}),"#charities-container"),c=new class extends s{constructor(t,e){super({popupSelector:e}),this._donationForm=this._popupElement.querySelector(".donation-form"),this._formSubmit=t}_getInputValues(){const t={};return this._donationForm.querySelectorAll(".donation-form__input").forEach((e=>{t[e.name]=e.value})),t}close(){this._donationForm.reset(),super.close()}setEventListeners(){this._donationForm.addEventListener("submit",(t=>{t.preventDefault();const e=this._getInputValues();this._formSubmit(e),this.close()})),super.setEventListeners()}}((t=>{l.addItem(t)}),".donation__popup"),l=new e((e=>new t(e,"#donation-card__template").createCard()),".donations__gallery");c.setEventListeners(),o.addEventListener("click",(()=>{c.open(),h.resetValidation()}));const _=document.querySelector("#donation-form"),h=new class{constructor(t,e){this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=e}_showInputError(t,e){const r=document.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),r.textContent=e,r.classList.add(this._errorClass)}_hideInputError(t){const e=document.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.classList.remove(this._errorClass),e.textContent=""}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}resetValidation(){this.toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}disableSubmitButton=()=>{const t=this._formElement.querySelector(this._submitButtonSelector);t.classList.add(this._inactiveButtonClass),t.disabled=!0};_setEventListeners(){this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this.toggleButtonState(),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this.toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}}({formSelector:".donation-form",inputSelector:".donation-form__input",submitButtonSelector:".donation-form__submit-button",inactiveButtonClass:"donation-form__submit-button_disabled",inputErrorClass:"donation-form__input_type_error",errorClass:"donation-form__error_visible"},_);h.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,