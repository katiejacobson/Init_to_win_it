!function(){"use strict";class t{constructor(t,e){this._data=t,this._cardSelector=e,this._email=t.email,this._location=t.location,this._desc=t.text,this._link=t.link,this._cardTemplate=e}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".donation-card").cloneNode(!0)}createCard(){return this._cardElement=this._getTemplate(),this._cardEmail=this._cardElement.querySelector(".donation-card__email"),this._cardLocation=this._cardElement.querySelector(".donation-card__location"),this._cardDonation=this._cardElement.querySelector(".donation-card__description"),this._cardImage=this._cardElement.querySelector(".donation-card__image"),this._cardEmail.textContent=`Email: ${this._email}`,this._cardLocation.textContent=`Location: ${this._location}`,this._cardDonation.textContent=`Donation: ${this._desc}`,this._cardImage.src=this._link,this._cardImage.alt=this._desc,this._cardElement}}class e{constructor(t,e){this._renderer=t,this._container=document.querySelector(e)}renderItems(t){t.forEach((t=>{this.addItem(t)}))}addItem(t){const e=this._renderer(t);this._container.prepend(e)}clearItems(){if(this._cards=this._container.querySelectorAll(".charity-card"),null!==this._cards)for(var t=0;t<this._cards.length;t++)this._cards[t].remove()}}class r{constructor(t,e){this._data=t,this._name=t.name,this._profileUrl=t.profileUrl,this._logoUrl=t.logoUrl,this._location=t.location,this._cardSelector=e}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".charity-card").cloneNode(!0)}generateCard(){return this._element=this._getTemplate(),this._element.querySelector(".charity-card__name").textContent=this._name,this._element.querySelector(".charity-card__location").textContent=this._location,this._element.querySelector(".charity-card__url").href=this._profileUrl,this._element}}class s{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e),this._popupCloseButton=this._popupElement.querySelector(".popup__close-button"),this._closeByEscape=t=>{"Escape"===t.key&&this.close()}}open(){this._popupElement.classList.add("donation__popup_opened"),document.addEventListener("keydown",this._closeByEscape)}close(){this._popupElement.classList.remove("donation__popup_opened"),document.removeEventListener("keydown",this._closeByEscape)}setEventListeners(){this._popupElement.addEventListener("click",(t=>{t.target!==this._popupCloseButton&&t.target!==this._popupElement||this.close()}))}}const o=document.querySelector(".donate__button"),i=new class{constructor(t){let{baseUrl:e,apiKey:r}=t;this._baseUrl=e,this._apiKey=r}_request(t){return fetch(t).then(this.renderResult)}renderResult(t){return t.ok?t.json():Promise.reject(`'Error:' ${t.status}`)}getInfo(t){return fetch(`${this._baseUrl}search/causes=${t}?apiKey=${this._apiKey}`).then(this.renderResult)}}({baseUrl:"https://partners.every.org/v0.2/",apiKey:"pk_live_51295acbffe33d27ac313b33feb97d63"});new class{constructor(t,e){this._formElement=document.querySelector(t),this._form=this._formElement.querySelector(".charities__form"),this._formBtn=this._formElement.querySelector(".charities__button"),this._input=this._formElement.querySelector(".charities__input"),this._handleFormSubmit=e}_getCause(){for(var t,e=document.getElementsByName("cause"),r=0;r<e.length;r++)e[r].checked&&(t=e[r].value);return t}setEventListeners(){this._formBtn.addEventListener("click",(t=>{t.preventDefault();const e=this._getCause();this._handleFormSubmit(e),this._form.reset()}))}}(".charities",(function(t){n.clearItems(),i.getInfo(t).then((t=>{n.renderItems(t.nonprofits)})).catch(console.error)})).setEventListeners();const n=new e((function(t){return new r(t,"#charity-card-template").generateCard()}),"#charities-container"),a=new class extends s{constructor(t,e){super({popupSelector:e}),this._donationForm=this._popupElement.querySelector(".donation-form"),this._formSubmit=t}_getInputValues(){const t={};return this._donationForm.querySelectorAll(".donation-form__input").forEach((e=>{t[e.name]=e.value})),t}close(){this._donationForm.reset(),super.close()}setEventListeners(){this._donationForm.addEventListener("submit",(t=>{t.preventDefault();const e=this._getInputValues();this._formSubmit(e),this.close()})),super.setEventListeners()}}((t=>{c.addItem(t)}),".donation__popup"),c=new e((e=>new t(e,"#donation-card__template").createCard()),".donations__gallery");a.setEventListeners(),o.addEventListener("click",(()=>{a.open(),_.resetValidation()}));const l=document.querySelector("#donation-form"),_=new class{constructor(t,e){this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=e}_showInputError(t,e){const r=document.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),r.textContent=e,r.classList.add(this._errorClass)}_hideInputError(t){const e=document.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.classList.remove(this._errorClass),e.textContent=""}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}resetValidation(){this.toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}disableSubmitButton=()=>{const t=this._formElement.querySelector(this._submitButtonSelector);t.classList.add(this._inactiveButtonClass),t.disabled=!0};_setEventListeners(){this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this.toggleButtonState(),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this.toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}}({formSelector:".donation-form",inputSelector:".donation-form__input",submitButtonSelector:".donation-form__submit-button",inactiveButtonClass:"donation-form__submit-button_disabled",inputErrorClass:"donation-form__input_type_error",errorClass:"donation-form__error_visible"},l);_.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFBLEdBQ0U5SixLQUFLNEYsYUFBYXpCLGlCQUFpQixVQUFXTixJQUM1Q0EsRUFBSXlDLGdCQUFnQixJQUV0QnRHLEtBQUsySixvQkFDUCxHTHZGMEMsQ0FDMUM3QixhQUFjLGlCQUNkRSxjQUFlLHdCQUNmRSxxQkFBc0IsZ0NBQ3RCRSxvQkFBcUIsd0NBQ3JCRSxnQkFBaUIsa0NBQ2pCRSxXQUFZLGdDQzJEWmIsR0FFRkYsRUFBc0JxQyxrQiIsInNvdXJjZXMiOlsid2VicGFjazovL2NvZGVfamFtLy4vc3JjL2NvbXBvbmVudHMvRG9uYXRpb25DYXJkLmpzIiwid2VicGFjazovL2NvZGVfamFtLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9jb2RlX2phbS8uL3NyYy9jb21wb25lbnRzL0NoYXJpdHlDYXJkLmpzIiwid2VicGFjazovL2NvZGVfamFtLy4vc3JjL2NvbXBvbmVudHMvcG9wdXAuanMiLCJ3ZWJwYWNrOi8vY29kZV9qYW0vLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL2NvZGVfamFtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL2NvZGVfamFtLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL2NvZGVfamFtLy4vc3JjL2NvbXBvbmVudHMvQ2hhcml0aWVzLmpzIiwid2VicGFjazovL2NvZGVfamFtLy4vc3JjL2NvbXBvbmVudHMvRG9uYXRpb25zUG9wdXAuanMiLCJ3ZWJwYWNrOi8vY29kZV9qYW0vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIERvbmF0aW9uQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKGRhdGEsIGNhcmRUZW1wbGF0ZSkge1xuICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRUZW1wbGF0ZTtcbiAgICB0aGlzLl9lbWFpbCA9IGRhdGEuZW1haWw7XG4gICAgdGhpcy5fbG9jYXRpb24gPSBkYXRhLmxvY2F0aW9uO1xuICAgIHRoaXMuX2Rlc2MgPSBkYXRhLnRleHQ7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcbiAgICB0aGlzLl9jYXJkVGVtcGxhdGUgPSBjYXJkVGVtcGxhdGU7XG4gIH1cblxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgY29uc3QgX2NhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZG9uYXRpb24tY2FyZFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICAgIHJldHVybiBfY2FyZEVsZW1lbnQ7XG4gIH1cbiAgY3JlYXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG4gICAgdGhpcy5fY2FyZEVtYWlsID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5kb25hdGlvbi1jYXJkX19lbWFpbFwiKTtcbiAgICB0aGlzLl9jYXJkTG9jYXRpb24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCIuZG9uYXRpb24tY2FyZF9fbG9jYXRpb25cIlxuICAgICk7XG4gICAgdGhpcy5fY2FyZERvbmF0aW9uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiLmRvbmF0aW9uLWNhcmRfX2Rlc2NyaXB0aW9uXCJcbiAgICApO1xuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZG9uYXRpb24tY2FyZF9faW1hZ2VcIik7XG4gICAgdGhpcy5fY2FyZEVtYWlsLnRleHRDb250ZW50ID0gYEVtYWlsOiAke3RoaXMuX2VtYWlsfWA7XG4gICAgdGhpcy5fY2FyZExvY2F0aW9uLnRleHRDb250ZW50ID0gYExvY2F0aW9uOiAke3RoaXMuX2xvY2F0aW9ufWA7XG4gICAgdGhpcy5fY2FyZERvbmF0aW9uLnRleHRDb250ZW50ID0gYERvbmF0aW9uOiAke3RoaXMuX2Rlc2N9YDtcblxuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9kZXNjO1xuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHJlbmRlcmVyLCBlbGVtZW50U2VsZWN0b3IpIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWxlbWVudFNlbGVjdG9yKTtcbiAgfVxuXG4gIC8vIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XG4gIC8vICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAvLyAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XG4gIC8vICAgfSk7XG4gIC8vIH1cbiAgLy8gYWRkSXRlbShpdGVtKSB7XG4gIC8vICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoaXRlbSk7XG4gIC8vIH1cblxuICByZW5kZXJJdGVtcyhpdGVtcykge1xuICAgIGl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIHRoaXMuYWRkSXRlbShpdGVtKTtcbiAgICB9KTtcbiAgfVxuXG4gIGFkZEl0ZW0oaXRlbSkge1xuICAgIGNvbnN0IG5ld0NhcmQgPSB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChuZXdDYXJkKTtcbiAgfVxuXG4gIGNsZWFySXRlbXMoKSB7XG4gICAgdGhpcy5fY2FyZHMgPSB0aGlzLl9jb250YWluZXIucXVlcnlTZWxlY3RvckFsbChcIi5jaGFyaXR5LWNhcmRcIik7XG4gICAgaWYgKHRoaXMuX2NhcmRzICE9PSBudWxsKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX2NhcmRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMuX2NhcmRzW2ldLnJlbW92ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hhcml0eUNhcmQge1xuICBjb25zdHJ1Y3RvcihkYXRhLCBjYXJkU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9kYXRhID0gZGF0YTtcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX3Byb2ZpbGVVcmwgPSBkYXRhLnByb2ZpbGVVcmw7XG4gICAgdGhpcy5fbG9nb1VybCA9IGRhdGEubG9nb1VybDtcbiAgICB0aGlzLl9sb2NhdGlvbiA9IGRhdGEubG9jYXRpb247XG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IF9jYXJkRWxlbWVudCA9IGRvY3VtZW50XG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNoYXJpdHktY2FyZFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICAgIHJldHVybiBfY2FyZEVsZW1lbnQ7XG4gIH1cblxuICBnZW5lcmF0ZUNhcmQoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG5cbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2hhcml0eS1jYXJkX19uYW1lXCIpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2hhcml0eS1jYXJkX19sb2NhdGlvblwiKS50ZXh0Q29udGVudCA9XG4gICAgICB0aGlzLl9sb2NhdGlvbjtcbiAgICAvLyB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2hhcml0eS1jYXJkX19sb2dvXCIpLnNyYyA9IHRoaXMuX2xvZ29Vcmw7XG4gICAgLy8gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNoYXJpdHktY2FyZF9fbG9nb1wiKS5hbHQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jaGFyaXR5LWNhcmRfX3VybFwiKS5ocmVmID0gdGhpcy5fcHJvZmlsZVVybDtcblxuICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuX2VsZW1lbnQpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0pIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX3BvcHVwQ2xvc2VCdXR0b24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiLnBvcHVwX19jbG9zZS1idXR0b25cIlxuICAgICk7XG4gICAgdGhpcy5fY2xvc2VCeUVzY2FwZSA9IChldnQpID0+IHtcbiAgICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJkb25hdGlvbl9fcG9wdXBfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2Nsb3NlQnlFc2NhcGUpO1xuICB9XG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwiZG9uYXRpb25fX3BvcHVwX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9jbG9zZUJ5RXNjYXBlKTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgICAgaWYgKFxuICAgICAgICBldnQudGFyZ2V0ID09PSB0aGlzLl9wb3B1cENsb3NlQnV0dG9uIHx8XG4gICAgICAgIGV2dC50YXJnZXQgPT09IHRoaXMuX3BvcHVwRWxlbWVudFxuICAgICAgKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIiwiZXhwb3J0IGNvbnN0IGRvbmF0aW9uRm9ybVZhbGlkYXRpb25Db25maWcgPSB7XG4gIGZvcm1TZWxlY3RvcjogXCIuZG9uYXRpb24tZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5kb25hdGlvbi1mb3JtX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIuZG9uYXRpb24tZm9ybV9fc3VibWl0LWJ1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcImRvbmF0aW9uLWZvcm1fX3N1Ym1pdC1idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcImRvbmF0aW9uLWZvcm1fX2lucHV0X3R5cGVfZXJyb3JcIixcbiAgZXJyb3JDbGFzczogXCJkb25hdGlvbi1mb3JtX19lcnJvcl92aXNpYmxlXCIsXG59O1xuXG5leHBvcnQgY29uc3QgY2hhcml0aWVzRm9ybVZhbGlkYXRpb25Db25maWcgPSB7XG4gIGZvcm1TZWxlY3RvcjogXCIuY2hhcml0aWVzX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLmNoYXJpdGllc19faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLmNoYXJpdGllc19fYnV0dG9uXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJjaGFyaXRpZXMtZm9ybV9faW5wdXRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcImNoYXJpdGllcy1mb3JtX19lcnJvcl92aXNpYmxlXCIsXG59O1xuIiwiLy8gSU1QT1JUU1xuaW1wb3J0IERvbmF0aW9uQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9Eb25hdGlvbkNhcmQuanNcIjtcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XG5pbXBvcnQgQ2hhcml0aWVzIGZyb20gXCIuLi9jb21wb25lbnRzL0NoYXJpdGllcy5qc1wiO1xuaW1wb3J0IENoYXJpdHlDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NoYXJpdHlDYXJkLmpzXCI7XG5pbXBvcnQgRG9uYXRpb25zUG9wdXAgZnJvbSBcIi4uL2NvbXBvbmVudHMvRG9uYXRpb25zUG9wdXAuanNcIjtcbmltcG9ydCBGb3JtVmFsaWRhdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgeyBkb25hdGlvbkZvcm1WYWxpZGF0aW9uQ29uZmlnIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IFwiLi4vcGFnZXMvaW5kZXguY3NzXCI7XG5cbmNvbnN0IGRvbmF0ZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZG9uYXRlX19idXR0b25cIik7XG5cbi8vQVBJIElOU1RBTlRJQVRJT05cbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vcGFydG5lcnMuZXZlcnkub3JnL3YwLjIvXCIsXG4gIGFwaUtleTogXCJwa19saXZlXzUxMjk1YWNiZmZlMzNkMjdhYzMxM2IzM2ZlYjk3ZDYzXCIsXG59KTtcblxuLy9DSEFSSVRZIEZPUk1cbmNvbnN0IGNoYXJpdHlGb3JtID0gbmV3IENoYXJpdGllcyhcIi5jaGFyaXRpZXNcIiwgaGFuZGxlQ2hhcml0eUZvcm1TdWJtaXQpO1xuY2hhcml0eUZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuZnVuY3Rpb24gaGFuZGxlQ2hhcml0eUZvcm1TdWJtaXQoZGF0YSkge1xuICBjaGFyaXR5Q2FyZExpc3QuY2xlYXJJdGVtcygpO1xuICBhcGlcbiAgICAuZ2V0SW5mbyhkYXRhKVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIGNoYXJpdHlDYXJkTGlzdC5yZW5kZXJJdGVtcyhyZXMubm9ucHJvZml0cyk7XG4gICAgfSlcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcik7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNoYXJpdHlDYXJkKGRhdGEpIHtcbiAgY29uc3QgY2hhcml0eUNhcmQgPSBuZXcgQ2hhcml0eUNhcmQoZGF0YSwgXCIjY2hhcml0eS1jYXJkLXRlbXBsYXRlXCIpO1xuICByZXR1cm4gY2hhcml0eUNhcmQuZ2VuZXJhdGVDYXJkKCk7XG59XG5cbmNvbnN0IGNoYXJpdHlDYXJkTGlzdCA9IG5ldyBTZWN0aW9uKGNyZWF0ZUNoYXJpdHlDYXJkLCBcIiNjaGFyaXRpZXMtY29udGFpbmVyXCIpO1xuXG4vLyBET05BVElPTkZPUk1cbmNvbnN0IGNyZWF0ZURvbmF0aW9uQ2FyZCA9IChjYXJkRGF0YSkgPT4ge1xuICBjb25zdCBuZXdDYXJkID0gbmV3IERvbmF0aW9uQ2FyZChjYXJkRGF0YSwgXCIjZG9uYXRpb24tY2FyZF9fdGVtcGxhdGVcIik7XG4gIHJldHVybiBuZXdDYXJkLmNyZWF0ZUNhcmQoKTtcbn07XG5jb25zdCBkb25hdGlvblJlbmRlcmVyID0gKGlucHV0RGF0YSkgPT4ge1xuICBzZWN0aW9uRG9uYXRpb25zLmFkZEl0ZW0oaW5wdXREYXRhKTtcbn07XG5jb25zdCBkb25hdGlvbnNQb3B1cCA9IG5ldyBEb25hdGlvbnNQb3B1cChkb25hdGlvblJlbmRlcmVyLCBcIi5kb25hdGlvbl9fcG9wdXBcIik7XG5jb25zdCBzZWN0aW9uRG9uYXRpb25zID0gbmV3IFNlY3Rpb24oY3JlYXRlRG9uYXRpb25DYXJkLCBcIi5kb25hdGlvbnNfX2dhbGxlcnlcIik7XG5cbi8vIENMQVNTIE1FVEhPRCBDQUxMU1xuZG9uYXRpb25zUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy8gRVZFTlQgTElTVEVORVJTXG5kb25hdGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgZG9uYXRpb25zUG9wdXAub3BlbigpO1xuICBkb25hdGlvbkZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG59KTtcblxuLy9GT1JNIFZBTElEQVRJT05cbmNvbnN0IGRvbmF0aW9uRm9ybUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RvbmF0aW9uLWZvcm1cIik7XG5cbmNvbnN0IGRvbmF0aW9uRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdGlvbihcbiAgZG9uYXRpb25Gb3JtVmFsaWRhdGlvbkNvbmZpZyxcbiAgZG9uYXRpb25Gb3JtRWxlbWVudFxuKTtcbmRvbmF0aW9uRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGFwaUtleSB9KSB7XG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgdGhpcy5fYXBpS2V5ID0gYXBpS2V5O1xuICB9XG5cbiAgX3JlcXVlc3QodXJsKSB7XG4gICAgcmV0dXJuIGZldGNoKHVybCkudGhlbih0aGlzLnJlbmRlclJlc3VsdCk7XG4gIH1cblxuICByZW5kZXJSZXN1bHQocmVzKSB7XG4gICAgaWYgKHJlcy5vaykge1xuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgJ0Vycm9yOicgJHtyZXMuc3RhdHVzfWApO1xuICAgIH1cbiAgfVxuXG4gIC8vICAgZ2V0SW5mbyhjaXR5KSB7XG4gIC8vICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChgJHt0aGlzLl9iYXNlVXJsfS9hcGkvb3JnYW5pemF0aW9ucy9zZWFyY2gvOiR7Y2l0eX1gLCB7XG4gIC8vICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gIC8vICAgICB9KTtcbiAgLy8gICB9XG5cbiAgZ2V0SW5mbyhjYXVzZSkge1xuICAgIHJldHVybiBmZXRjaChcbiAgICAgIGAke3RoaXMuX2Jhc2VVcmx9c2VhcmNoL2NhdXNlcz0ke2NhdXNlfT9hcGlLZXk9JHt0aGlzLl9hcGlLZXl9YFxuICAgICkudGhlbih0aGlzLnJlbmRlclJlc3VsdCk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENoYXJpdGllcyB7XG4gIGNvbnN0cnVjdG9yKGZvcm1FbGVtZW50LCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGZvcm1FbGVtZW50KTtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jaGFyaXRpZXNfX2Zvcm1cIik7XG4gICAgdGhpcy5fZm9ybUJ0biA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2hhcml0aWVzX19idXR0b25cIik7XG4gICAgdGhpcy5faW5wdXQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNoYXJpdGllc19faW5wdXRcIik7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gIH1cblxuICBfZ2V0Q2F1c2UoKSB7XG4gICAgdmFyIGVsZW1lbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoXCJjYXVzZVwiKTtcbiAgICB2YXIgY2F1c2U7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGVsZW1lbnRzW2ldLmNoZWNrZWQpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coZWxlbWVudHNbaV0pO1xuICAgICAgICBjYXVzZSA9IGVsZW1lbnRzW2ldLnZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY2F1c2U7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9mb3JtQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGNvbnN0IHNlbGVjdGVkQ2F1c2UgPSB0aGlzLl9nZXRDYXVzZSgpO1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdChzZWxlY3RlZENhdXNlKTtcbiAgICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL3BvcHVwLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEb25hdGlvbnNQb3B1cCBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IoZm9ybVN1Ym1pdCwgcG9wdXBTZWxlY3Rvcikge1xuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcbiAgICB0aGlzLl9kb25hdGlvbkZvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5kb25hdGlvbi1mb3JtXCIpO1xuICAgIHRoaXMuX2Zvcm1TdWJtaXQgPSBmb3JtU3VibWl0O1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge307XG4gICAgY29uc3QgaW5wdXRFbGVtZW50cyA9IHRoaXMuX2RvbmF0aW9uRm9ybS5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgXCIuZG9uYXRpb24tZm9ybV9faW5wdXRcIlxuICAgICk7XG4gICAgaW5wdXRFbGVtZW50cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XG4gIH1cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fZG9uYXRpb25Gb3JtLnJlc2V0KCk7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgfVxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9kb25hdGlvbkZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGNvbnN0IGlucHV0VmFsdWVzID0gdGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKTtcbiAgICAgIHRoaXMuX2Zvcm1TdWJtaXQoaW5wdXRWYWx1ZXMpO1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pO1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0aW9uIHtcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gc2V0dGluZ3MuZm9ybVNlbGVjdG9yO1xuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBzZXR0aW5ncy5pbnB1dFNlbGVjdG9yO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzO1xuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcbiAgICBjb25zdCBfZXJyb3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgX2Vycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcbiAgICBfZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XG4gIH1cblxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgX2Vycm9yRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIF9lcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICBfZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgfVxuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICBfaGFzSW52YWxpZElucHV0KCkge1xuICAgIHJldHVybiB0aGlzLl9pbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcbiAgICB9KTtcbiAgfVxuXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XG5cbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH0pO1xuICB9XG5cbiAgdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGRpc2FibGVTdWJtaXRCdXR0b24gPSAoKSA9PiB7XG4gICAgY29uc3QgYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvclxuICAgICk7XG4gICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIGJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xuICB9O1xuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKVxuICAgICk7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvclxuICAgICk7XG4gICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xuXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xuICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiRG9uYXRpb25DYXJkIiwiY29uc3RydWN0b3IiLCJkYXRhIiwiY2FyZFRlbXBsYXRlIiwidGhpcyIsIl9kYXRhIiwiX2NhcmRTZWxlY3RvciIsIl9lbWFpbCIsImVtYWlsIiwiX2xvY2F0aW9uIiwibG9jYXRpb24iLCJfZGVzYyIsInRleHQiLCJfbGluayIsImxpbmsiLCJfY2FyZFRlbXBsYXRlIiwiX2dldFRlbXBsYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsImNyZWF0ZUNhcmQiLCJfY2FyZEVsZW1lbnQiLCJfY2FyZEVtYWlsIiwiX2NhcmRMb2NhdGlvbiIsIl9jYXJkRG9uYXRpb24iLCJfY2FyZEltYWdlIiwidGV4dENvbnRlbnQiLCJzcmMiLCJhbHQiLCJTZWN0aW9uIiwicmVuZGVyZXIiLCJlbGVtZW50U2VsZWN0b3IiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwicmVuZGVySXRlbXMiLCJpdGVtcyIsImZvckVhY2giLCJpdGVtIiwiYWRkSXRlbSIsIm5ld0NhcmQiLCJwcmVwZW5kIiwiY2xlYXJJdGVtcyIsIl9jYXJkcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpIiwibGVuZ3RoIiwicmVtb3ZlIiwiQ2hhcml0eUNhcmQiLCJjYXJkU2VsZWN0b3IiLCJfbmFtZSIsIm5hbWUiLCJfcHJvZmlsZVVybCIsInByb2ZpbGVVcmwiLCJfbG9nb1VybCIsImxvZ29VcmwiLCJnZW5lcmF0ZUNhcmQiLCJfZWxlbWVudCIsImhyZWYiLCJQb3B1cCIsIl9yZWYiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwRWxlbWVudCIsIl9wb3B1cENsb3NlQnV0dG9uIiwiX2Nsb3NlQnlFc2NhcGUiLCJldnQiLCJrZXkiLCJjbG9zZSIsIm9wZW4iLCJjbGFzc0xpc3QiLCJhZGQiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInNldEV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0IiwiZG9uYXRlQnV0dG9uIiwiYXBpIiwiYmFzZVVybCIsImFwaUtleSIsIl9iYXNlVXJsIiwiX2FwaUtleSIsIl9yZXF1ZXN0IiwidXJsIiwiZmV0Y2giLCJ0aGVuIiwicmVuZGVyUmVzdWx0IiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImdldEluZm8iLCJjYXVzZSIsImZvcm1FbGVtZW50IiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9mb3JtRWxlbWVudCIsIl9mb3JtIiwiX2Zvcm1CdG4iLCJfaW5wdXQiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9nZXRDYXVzZSIsImVsZW1lbnRzIiwiZ2V0RWxlbWVudHNCeU5hbWUiLCJjaGVja2VkIiwidmFsdWUiLCJwcmV2ZW50RGVmYXVsdCIsInNlbGVjdGVkQ2F1c2UiLCJyZXNldCIsImNoYXJpdHlDYXJkTGlzdCIsIm5vbnByb2ZpdHMiLCJjYXRjaCIsImNvbnNvbGUiLCJlcnJvciIsImRvbmF0aW9uc1BvcHVwIiwiZm9ybVN1Ym1pdCIsInN1cGVyIiwiX2RvbmF0aW9uRm9ybSIsIl9mb3JtU3VibWl0IiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRWYWx1ZXMiLCJpbnB1dCIsImlucHV0RGF0YSIsInNlY3Rpb25Eb25hdGlvbnMiLCJjYXJkRGF0YSIsImRvbmF0aW9uRm9ybVZhbGlkYXRvciIsInJlc2V0VmFsaWRhdGlvbiIsImRvbmF0aW9uRm9ybUVsZW1lbnQiLCJzZXR0aW5ncyIsIl9mb3JtU2VsZWN0b3IiLCJmb3JtU2VsZWN0b3IiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJfZXJyb3JFbGVtZW50IiwiaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidmFsaWRpdHkiLCJ2YWxpZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2hhc0ludmFsaWRJbnB1dCIsIl9pbnB1dExpc3QiLCJzb21lIiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJfYnV0dG9uRWxlbWVudCIsImRpc2FibGVkIiwiZGlzYWJsZVN1Ym1pdEJ1dHRvbiIsImJ1dHRvbkVsZW1lbnQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJBcnJheSIsImZyb20iLCJlbmFibGVWYWxpZGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==